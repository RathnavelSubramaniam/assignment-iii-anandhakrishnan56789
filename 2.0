title: "R-ASSIGNMENT-2"

author: "ananshakrishnan s"

date: "11/3/2022"
 
 
output: html_document


```{r}
library(nycflights13)
```

1.Sort flights to find fastest flights

ANSWER :

```{r}
flights %>% mutate(travel_time = ifelse((arr_time - dep_time < 0), 
                                        2400+(arr_time - dep_time),
                                        arr_time - dep_time)) %>% 
  arrange(travel_time) %>% select(arr_time, dep_time, travel_time)
```

```{r}
arrange(flights, (arr_time - dep_time))
```

2.Compare dep_time, sched_dep_time and dep_delay.How do you except those three numbers to be related?

ANSWER :

```{r}
flights %>% 
  mutate(dep_time = (dep_time %/% 100) * 60 + (dep_time %% 100),
         sched_dep_time = (sched_dep_time %/% 100) * 60 + (sched_dep_time %% 100),
         arr_time = (arr_time %/% 100) * 60 + (arr_time %% 100),
         sched_arr_time = (sched_arr_time %/% 100) * 60 + (sched_arr_time %% 100)) %>%
  transmute(near((sched_dep_time + dep_delay) %% (60*24), dep_time, tol=1))
```

3.Brainstorm at least 5 different ways to assess the typical delay characteristics of a group of flights. Consider the following scenarios:

a.  A flight is 15 minutes early 50% of the time, and 15 minutes late 50% of the time

b.  A flight is always 10 minutes late.

c.  A flight is 30 minutes early 50% of the time, and 30 minutes late 50% of the time.

d.  99% of the time a flight is on time. 1% of the time it's 2 hours late

ANSWER :

```{r}
str(flights)
head(flights)
flight_delay_summary <- group_by(flights, flight) %>% summarise(num_flights = n(),
                                                                percentage_on_time = sum(arr_time == sched_arr_time)/num_flights,
                                                                percentage_early = sum(arr_time < sched_arr_time)/num_flights, 
                                                                percentage_15_mins_early = sum(sched_arr_time - arr_time == 15)/num_flights,
                                                                percentage_late = sum(arr_time > sched_arr_time)/num_flights,
                                                                percentage_15_mins_late = sum(arr_time - sched_arr_time == 15)/num_flights,
                                                                percentage_2_hours_late = sum(arr_time - sched_arr_time == 120)/num_flights)
flight_delay_summary
```

Using this, we can then answer the preceding questions, e.g. a flight that is 15 minutes early 50% of the time, and 15 minutes late 50% of the time can be found using:

```{r}
 flight_delay_summary %>% filter(percentage_15_mins_early == 0.5 & percentage_15_mins_late == 0.5)  

```

As for whether arrival delay or departure delay is more important - from the individual perspective this may be a matter of personal taste, and from the business perspective we would need data on associated costs of both types of delay (monetary, customer satisfaction hits, etc.) to reason about relative importance.

4.Which plane (tailnum) has the worst on-time record?

ANSWER :

```{r}
flights %>%
  group_by(tailnum) %>%
  summarise(prop_on_time = sum(arr_delay <= 30 & !is.na(arr_delay))/n(),
            mean_arr_delay = mean(arr_delay, na.rm=TRUE),
            flights = n()) %>%
  arrange(prop_on_time, desc(mean_arr_delay))
```

```{r}
flights %>%
  group_by(tailnum) %>%
  filter(all(is.na(arr_delay))) %>%
    tally(sort=TRUE)
```

5.Brainstorm as many ways as possible to select dep_time, dep_delay, arr_time, and arr_delay from flights.

ANSWER :

```{r}
select(flights, dep_time,  dep_delay, arr_time, arr_delay)
select(flights, c(dep_time,  dep_delay, arr_time, arr_delay))
flights %>% select(dep_time,  dep_delay, arr_time, arr_delay)
flights %>% select_("dep_time",  "dep_delay", "arr_time", "arr_delay")
flights %>% select_(.dots=c("dep_time",  "dep_delay", "arr_time", "arr_delay"))    

flights %>% select(dep_time:arr_delay, -c(contains("sched")))
flights %>% select(ends_with("time"),  ends_with("delay")) %>% select(-c(starts_with("sched"), starts_with("air")))
flights %>% select(contains("dep"), contains("arr"), -contains("sched"), -carrier)
flights %>% select(matches("^dep|arr_delay|time$"))
flights %>% select(matches("^dep|^arr"))
flights %>% select(matches("^dep|^arr.*time$|delay$"))
flights %>% select(matches("^dep|^arr_time$|delay$"))
head(flights)    
```
